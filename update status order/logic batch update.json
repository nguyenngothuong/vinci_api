{
    "input": {
      "old_data": [
        {
          "record_id": "recuEmkFY92dna",
          "fields": {
            "order_code": {
              "type": 1,
              "value": [
                {
                  "text": "DH519",
                  "type": "text"
                }
              ]
            },
            "Trạng thái đơn": "Xuất kho"
          }
        }
      ],
      "new_data": [
        {
          "order_code": "DH519",
          "status": "Xuất kho"
        }
      ]
    },
    "js_code": "/**\n * Prepare Batch Update\n * --------------------------------\n * Chuẩn bị dữ liệu cho việc cập nhật hàng loạt trạng thái đơn hàng\n *\n * Input: Object chứa old_data (dữ liệu hiện tại) và new_data (dữ liệu cập nhật)\n * Output: Object chứa dữ liệu đã được định dạng để cập nhật vào Larkbase\n */\n\nfunction handler(input) {\n  const response = {\n    success: true,\n    message:\n      'Dữ liệu đã được chuẩn bị thành công',\n    data: {\n      records: [],\n    },\n    errors: [],\n    stats: {\n      total: 0,\n      matched: 0,\n      unmatched: 0,\n    },\n  };\n\n  try {\n    // Kiểm tra cấu trúc input\n    if (\n      !input ||\n      !input.old_data ||\n      !input.new_data\n    ) {\n      response.success = false;\n      response.message =\n        'Dữ liệu đầu vào không hợp lệ';\n      response.errors.push(\n        'Thiếu old_data hoặc new_data'\n      );\n      return response;\n    }\n\n    if (\n      !Array.isArray(\n        input.old_data\n      ) ||\n      !Array.isArray(\n        input.new_data\n      )\n    ) {\n      response.success = false;\n      response.message =\n        'old_data và new_data phải là mảng';\n      response.errors.push(\n        'Định dạng dữ liệu không hợp lệ'\n      );\n      return response;\n    }\n\n    // Tạo map từ old_data để dễ dàng tìm kiếm theo order_code\n    const oldDataMap =\n      new Map();\n\n    input.old_data.forEach(\n      (record) => {\n        // Trích xuất order_code từ cấu trúc phức tạp\n        let orderCode = null;\n\n        if (\n          record.fields &&\n          record.fields\n            .order_code\n        ) {\n          const orderCodeField =\n            record.fields\n              .order_code;\n\n          if (\n            orderCodeField.type ===\n              1 &&\n            Array.isArray(\n              orderCodeField.value\n            ) &&\n            orderCodeField\n              .value.length >\n              0 &&\n            orderCodeField\n              .value[0].text\n          ) {\n            orderCode =\n              orderCodeField\n                .value[0]\n                .text;\n          }\n        }\n\n        if (orderCode) {\n          oldDataMap.set(\n            orderCode,\n            {\n              record_id:\n                record.record_id,\n              current_status:\n                record.fields[\n                  'Trạng thái đơn'\n                ] || null,\n            }\n          );\n        }\n      }\n    );\n\n    // Thống kê\n    response.stats.total =\n      input.new_data.length;\n\n    // Xử lý từng record trong new_data\n    input.new_data.forEach(\n      (newRecord) => {\n        const orderCode =\n          newRecord.order_code;\n        const newStatus =\n          newRecord.status;\n\n        // Tìm record tương ứng trong old_data\n        if (\n          oldDataMap.has(\n            orderCode\n          )\n        ) {\n          const oldRecord =\n            oldDataMap.get(\n              orderCode\n            );\n\n          // Tạo record để cập nhật\n          const updateRecord =\n            {\n              record_id:\n                oldRecord.record_id,\n              fields: {\n                'Trạng thái đơn':\n                  newStatus,\n              },\n            };\n\n          // Thêm vào danh sách records cần cập nhật\n          response.data.records.push(\n            updateRecord\n          );\n          response.stats\n            .matched++;\n\n          // Ghi lại thông tin thay đổi trạng thái\n          if (\n            oldRecord.current_status !==\n            newStatus\n          ) {\n            if (\n              !response.data\n                .status_changes\n            ) {\n              response.data.status_changes =\n                [];\n            }\n\n            response.data.status_changes.push(\n              {\n                order_code:\n                  orderCode,\n                record_id:\n                  oldRecord.record_id,\n                previous_status:\n                  oldRecord.current_status,\n                new_status:\n                  newStatus,\n              }\n            );\n          }\n        } else {\n          // Không tìm thấy record tương ứng\n          response.stats\n            .unmatched++;\n          response.errors.push(\n            `Không tìm thấy đơn hàng có mã: ${orderCode}`\n          );\n        }\n      }\n    );\n\n    // Cập nhật thông báo dựa trên kết quả\n    if (\n      response.stats\n        .matched === 0\n    ) {\n      response.success = false;\n      response.message =\n        'Không tìm thấy đơn hàng nào để cập nhật';\n    } else if (\n      response.stats\n        .unmatched > 0\n    ) {\n      response.message = `Đã tìm thấy ${response.stats.matched}/${response.stats.total} đơn hàng để cập nhật`;\n    } else {\n      response.message = `Đã chuẩn bị cập nhật ${response.stats.matched} đơn hàng`;\n    }\n  } catch (error) {\n    response.success = false;\n    response.message =\n      'Lỗi xử lý dữ liệu';\n    response.errors.push(\n      error.message\n    );\n  }\n\n  return response;\n}\n"
  }
{
    "result": {
      "success": true,
      "message": "Đã chuẩn bị cập nhật 1 đơn hàng",
      "data": {
        "records": [
          {
            "fields": {
              "Trạng thái đơn": "Xuất kho"
            },
            "record_id": "recuEmkFY92dna"
          }
        ]
      },
      "errors": [],
      "stats": {
        "total": 1,
        "matched": 1,
        "unmatched": 0
      }
    }
  }
  